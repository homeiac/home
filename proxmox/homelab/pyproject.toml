[tool.poetry]
name = "homelab"
version = "0.1.0"
description = ""
authors = ["Kumar Gopal <kumar.gopal@bd.com>"]
readme = "README.md"
packages = [{include = "homelab", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
proxmoxer = "^2.2.0"
requests = "^2.32.4"
dotenv = "^0.9.9"
paramiko = "^3.5.1"
python-dotenv = "^1.1.0"
requests-toolbelt = "^1.0.0"
pyudev = "^0.24.3"
python-socketio = "^5.13.0"
websocket-client = "^1.8.0"
uptime-kuma-api = "^1.2.1"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
pytest-cov = "^4.0.0"
coverage = "^7.4.0"
mypy = "^1.8.0"
flake8 = "^7.0.0"
black = "^24.0.0"
isort = "^5.13.0"
pytest-mock = "^3.12.0"
types-requests = "^2.32.4.20250611"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/homelab",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=100"
]

[tool.coverage.run]
source = ["src/homelab"]
omit = [
    "*/tests/*",
    "*/conftest.py",
    "*/__init__.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

[tool.black]
line-length = 120
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 120
known_first_party = ["homelab"]

[tool.flake8]
max-line-length = 120
extend-ignore = ["E203", "W503"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "proxmoxer.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "paramiko.*"
ignore_missing_imports = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
